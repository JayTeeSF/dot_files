docker-ip() {
  boot2docker ip 2> /dev/null
}

function parse_git_dirty {
   [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "*"
}
function parse_hg_dirty {
  [[ $(hg status 2> /dev/null | tail -n1) != "" ]] && echo "*"
}

function parse_repo_branch {
   ( [[ $(git branch --no-color 2> /dev/null | tail -n1) != "" ]] && parse_git_branch ) || ( [[ $(hg branch 2> /dev/null | tail -n1) != "" ]] && parse_hg_branch )
}

function parse_hg_branch {
  hg branch 2> /dev/null | sed -e "s/\(.*\)/[\1$(parse_hg_dirty)]/"
}

function parse_git_branch {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/[\1$(parse_git_dirty)]/"
}

tell () { osascript -e 'on run argv 
  display notification (item 1 of argv) subtitle (time string of (current date))
    end run' "$@"
    say "$@" ;
}

export PS1='¿\u? \[\033[1;33m\]\w\[\033[0m\]$(parse_repo_branch)\n\[\033[1;34m\]↪ \[\033[0m\]'
source ~/.git-completion.sh
alias short_prompt="export PS1='$ '"
alias redc='/usr/local/bin/redis-cli'
alias reds='/usr/local/bin/redis-server &'

alias cdr='cd $RAILS_ROOT' # first set RR
alias cdb='cd $HOME/dev/gbrainscape.com'
alias cdj='cd $HOME/dev/jayteesf'
alias cda='cd $HOME/dev/bspAndroid'

rrr() {
  export RAILS_ROOT=$HOME/dev/researcher
}

prr() {
  export RAILS_ROOT=$HOME/dev/pepper
}

alias cdp='prr; cdr'
alias res='rrr; cdr'
alias set_key_file='export KEY_FILE=/Users/jthomas/dev/household_people_and_contributions/config/f1_keys.rb'

alias rs='cdr; ./script/rails/server -u -p3000 -b127.0.0.1'
alias pc='cdr; pry -r ./config/environment'

alias gsync='git fetch origin; git remote prune origin'
alias f='dscacheutil -flushcache'
alias lg='git log --stat --ignore-space-at-eol --abbrev-commit --relative-date --format=medium'
alias ctag='/usr/local/Cellar/ctags/5.8/bin/ctags  --exclude=*.js --exclude=*.log --exclude=*.sql --extra=+f -R *'
alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'

export MERGE_TOOL=/usr/bin/opendiff
export CLICOLOR=1
alias netcheck="/usr/sbin/netstat -a | egrep 'LIST|EST'"
#alias memc='/usr/bin/memcached -d'

export EDITOR=vim
alias vi="vim"
set -o vi
alias mroe='/usr/bin/more'
alias got='/usr/bin/git'

export DISPLAY=:0.0

##
# Your previous /Users/jthomas/.bash_profile file was backed up as /Users/jthomas/.bash_profile.macports-saved_2012-03-13_at_09:44:40
##

## MacPorts Installer addition on 2012-03-13_at_09:44:40: adding an appropriate PATH variable for use with MacPorts.
#export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.


#export AFI_SECRET_KEY_BASE='88ejfbaa3d8a82ea225735ada5bd010689e4f0a62931248d9baf62c2da1eb8e7e8f7f65857250caf6e101f9ea86d85189a8d37b7f5749ac0ed2db178246b724f6'
#export AFI_PROD_DB_DATABASE='applyingforit_production'
#export AFI_PROD_DB_USER='applyingforit'
#export AFI_PROD_DB_PW=''
#export AFI_TEST_DB_DATABASE='applyingforit_test'
#export AFI_TEST_DB_USER='applyingforit'
#export AFI_TEST_DB_PW=''
#export AFI_DEV_DB_DATABASE='applyingforit_development'
#export AFI_DEV_DB_USER='applyingforit'
#export AFI_DEV_DB_PW=''

export MAHOUT_DIR="/usr/local/Cellar/mahout/0.9/"
export JAVA_HOME=$(/usr/libexec/java_home)
export SDK_DIR='/Applications/Android\ Studio.app/sdk'
#export JAVA_TOOLS='/Applications/Android\ Studio.app/sdk/platform-tools'

alias jgp='export GOPATH=$HOME/gocode'
export GOPATH=$HOME/gocode
alias cdg='jgp; cd $GOPATH/src/github.com/jayteesf'

alias bgp='export GOPATH=$HOME/dev/bsu'
alias cdbsu='bgp; cd $GOPATH/src/brainscape.com/bsu'
alias log='hg history --branch . | more'

PATH=$HOME/bin:/usr/local/bin:$PATH:/Applications/Android\ Studio.app/sdk/platform-tools:/Applications/Android\ Studio.app/sdk/tools:$GOPATH/bin:$GOPATH/bin/bin:/usr/local/Cellar/mysql55/5.5.30/bin

   _bsu() {
     COMPREPLY=()
     local word="${COMP_WORDS[COMP_CWORD]}"

     if [ "$COMP_CWORD" -eq 1 ]; then
       COMPREPLY=( $(compgen -W "$(bsu completions)" -- "$word") )
     else
       local command="${COMP_WORDS[1]}"
       local completions="$(bsu completions "$command")"
       COMPREPLY=( $(compgen -W "$completions" -- "$word") )
     fi
   }

   complete -F _bsu bsu
$(boot2docker shellinit 2>/dev/null)
# direnv setup:
eval "$(direnv hook $0)"
export NO_GUARD=true

# boot2docker ip:
# alias docker_ip='$(boot2docker ip 2>/dev/null)' <-- use docker-ip command!

# Brainscape iOS setup:
# PATH="/usr/bin/:/usr/local/sbin:$PATH"
PHP_AUTOCONF=/usr/local/bin/autoconf
SRC_ROOT="$HOME/dev/bii"
alias gpcstag='$SRC_ROOT/script/download_content.rb --archive=portal --url=https://staging.brainscape.com --prj_path=$SRC_ROOT --drop_t=true'
alias gpcprod='$SRC_ROOT/script/download_content.rb --archive=portal --url=https://m.brainscape.com --prj_path=$SRC_ROOT --drop_t=true'
alias gpclocal='$SRC_ROOT/script/download_content.rb --archive=portal --url=http://0.0.0.0:3000 --prj_path=$SRC_ROOT --drop_t=true'
alias essetup='cd ${HOME}/Downloads/elasticsearch-1.5.2/; ./bin/plugin -i elasticsearch/marvel/latest; echo "marvel.agent.enabled: false" >> ./config/elasticsearch.yml'
alias esstop='curl -XPOST "http://localhost:9200/_shutdown"'
alias ess='${HOME}/Downloads/elasticsearch-1.5.2/bin/elasticsearch'
# re-fix
PATH="$PATH:/usr/local/opt/go/libexec/bin"
export PATH="/usr/local/sbin:$PATH"
# export PATH=~/anaconda3/bin:"$PATH"
#export ANDROID_HOME=/usr/local/opt/android-sdk
export ANDROID_HOME=${HOME}/Library/Android/sdk
#export PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/bin"
export PATH=${PATH}:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools

export PATH=$PATH:/usr/local/opt/go/libexec/bin

# added by Anaconda3 5.0.1 installer
export PATH="/anaconda3/bin:$PATH"

# remove rails spring!!!
export DISABLE_SPRING=1

# rbEnv path update(s)
export RUBY_VERSION=$(cat ${HOME}/.rbenv/version)
export PATH="${HOME}/.rbenv/versions/${RUBY_VERSION}/bin:$PATH"

export BS_HOST="localhost:3003"
export BS_LOCAL_REDIS_DB="2"
export BS_LOCAL_REDIS_HOST="localhost"
export BS_LOCAL_REDIS_PORT="6380"
export BS_MYSQL_PORT="3307"
export BS_REDIS_PORT="6380"
